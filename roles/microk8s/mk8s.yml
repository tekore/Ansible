---
- name: Configure Server
  connection: local
  become: true
  become_user: root
  hosts: localhost
  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: mk8s

    - name: Install packages
      apt:
        pkg:
          - ufw
          - vim
          - lm-sensors
          - postfix
          - gparted
          - libfuse2
          - libgbm-dev
          - libasound-dev
          - btrfs-progs
        state: latest
        update_cache: true

    - name: Check UFW is disabled
      ufw:
        state: disabled
    ###
    #- name: ensure the btrfs file system is there
    #  command: "echo 'put something here to check cloud init did it's job'"
    ###
    - name: Create the needed directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0777
      with_items:
        - /var/containers/rclone
        - /var/containers/pigallery2/config
        - /var/containers/pigallery2/db
        - /var/containers/pigallery2/tmp
        - /var/containers/jellyfin/config
        - /var/containers/jellyfin/cache
        - /rclone_data

    - name: Create a symbolic link to backup directory
      ansible.builtin.file:
        src: /rclone_data/Backup/Pictures
        dest: /var/containers/pigallery2/images
        owner: root
        group: root
        state: link
        force: true

    #- name: Create rclone conf file
    #  ansible.builtin.copy:
    #    owner: root
    #    group: root
    #    dest: /var/containers/rclone/rclone.conf
    #    content: "{{ vars.rclone_config }}"

    - name: Enable btrfs scrub cronjob
      ansible.builtin.cron:
        name: Scrub backup /rclone_data
        minute: "0"
        hour: "18"
        day: "*"
        month: "*"
        weekday: "5"
        job: "bash /usr/bin/btrfs scrub start /rclone_data"
        state: present

    - name: Install microk8s
      community.general.snap:
        classic: true
        name: "microk8s"

    - name: Adding user to group
      user:
        name: tekore
        groups: microk8s
        append: yes

    - name: Change kube folder ownership
      file:
        path: /home/tekore/.kube
        owner: tekore
        group: tekore
        state: directory

    - name: Disable unused microk8s modules
      command: microk8s disable ha-cluster --force

    - name: Enable microk8s common modules
      command: microk8s enable dns cert-manager ingress hostpath-storage metrics-server